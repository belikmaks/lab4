import re

#Бєлік Максим КН-32/1
def student1_obrobka(text): #функція обробки від першого студента
    if not text.isalpha():
        # Очищення тексту від небажаних символів
        new_text = re.sub(r'[^a-zA-Zа-яА-ЯёЁіІїЇєЄ ]', '', text)
        # Перетворення тексту на верхній регістр
        new_text = new_text.upper()
        # Замінює всі входження 'A' на '!'
        new_text = new_text.replace('А', '!')
        print("Текст після обробки першим студентом: ")
        print(new_text)
    else:
        print("Текст містить тільки літери та не потребує зайвих символів.")

#Чернявська Анна КН-32/2
def student2_obrobka(text): #функція обробки від другого студента
        new_text = text.lower() #перетворюємо текст на нижній регістр
        new_text = new_text.capitalize() #перша літера велика
        new_text = list(new_text) #перетворюємо текст в список
        print(new_text)

#Приходько Марія КН-32/2
def student3_obrobka(text): #функція обробки від третього студента
    if not text.isalpha():
        #Перетворює кожну першу літеру слова в велику, а інші в    маленькі
        new_text_3 = text.title()
        print("")
        print(" ", new_text_3)
        print("")
        #Шукає підрядок(слово) в тексті
        new_text_3 = text.find('Програмування')
        if new_text_3 != -1: 
           print("Елемент тексту знайдено")
           print("")
        else:
          print("Елемент не знайдено") 
          print("")
        #Додає текст до тексту через символ "Х"
        new_text_3 = text.join(' Х ')
        print(" ", new_text_3)
        print("")
    else:
        print("Неможливо обробити текст")

#Баранова Софія КН-31/2
def student4_obrobka(text): #функція обробки від третього студента
        #вставлення " (дуже)" у текст після слова "Важко"
        index = text.index("Важко") + len("Важко")
        new_text = text[:index] + " (дуже)" + text[index:]
        #видалення "XXI" із початку тексту
        new_text = new_text.removeprefix("XXI")
        #вставлення "21" на початок тексту
        new_text = "21" + new_text
        #перетворення тексту на нижній регістр
        new_text = new_text.casefold()
        print(new_text)

#Бєлік Максим КН-32/1
# Вихідний текст
text = """XXI століття – період глобальної інформатизації суспільства. Важко уявити сучасне життя без комп’ютера, 
основою роботи якого є програмне забезпечення. Програмування сьогодні є одним із найперспективніших видів діяльності, 
адже потреби людства у автоматизації різних процесів невпинно зростають. Крім того, програмування розвиває творчий 
підхід, логічне мислення та вміння розв’язувати проблеми. Неабияку популярність у світі програмування здобуває 
кросплатформність."""

#Бєлік Максим КН-32/1
# Виклик функції
student1_obrobka(text)

"""Використані функції: re.sub(pattern, replacement, string):
Призначення: Замінює всі частини рядка, що відповідають регулярному виразу pattern, на рядок replacement.

upper():
Призначення: Перетворює всі літери в рядку на великі.

replace(old, new):
Призначення: Замінює всі входження підрядка old на підрядок new у рядку.

Наступним студентам необхідно застосувати такі три функції: lower(), capitalize(), list() """

#Чернявська Анна КН-32/2
# Виклик функції
student2_obrobka(text)

"""Використані функції:
lower() - функція перетворює всі символи рядка на малі літери.
capitalize() - функція перетворює першу літеру рядка на велику, а всі інші — на малі.
list() - функція перетворює рядок на список символів, де кожен символ стає окремим елементом списку.

Наступним студентам необхідно застосувати такі три функції: title(), find(), join()"""

#Приходько Марія КН-32/2
# Виклик функції
student3_obrobka(text)

"""Використані функції:
find() - функція шукає підрядок в рядку
title() - функція перетворює першу літеру кожного слова на велику, а всі інші - на малі
join() - функція об'єднує текст сам з собою, використовуючи символ як роздільник

Наступним студентам необхідно застосувати такі три функції: index(), removeprefix(), casefold()"""

#Баранова Софія КН-31/2
# Виклик функції
student4_obrobka(text)

"""Використані функції: 
index(value[, start[, end]]):
Призначення: Повертає індекс першого входження підрядка value у рядок, ValueError якщо value не знайдено.
removeprefix(prefix):
Призначення: Видаляє підрядок prefix із початку рядка, повертає оригінальний рядок якщо prefix відсутній.
casefold():
Призначення: Перетворює всі символи рядка на нижній регістр.

Наступним студентам необхідно застосувати такі три функції: """